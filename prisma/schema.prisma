// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  user_id         Int           @id @default(autoincrement())
  email           String        @unique
  name            String
  recipes         recipe_hdr[]  @relation("UserRecipes")
}

model recipe_hdr {
  recipe_id     Int                   @id @default(autoincrement())
  name          String                @unique
  author_id     Int
  author        user                  @relation("UserRecipes", fields: [author_id], references: [user_id])
  slug          String
  description   String
  servings      Int
  image_path    String                @default("")
  crt_ts        DateTime              @default(now())
  ingredients   recipe_ingredient[]   @relation("RecipeIngredients")
  steps         recipe_step[]         @relation("RecipeSteps")
}

model recipe_ingredient {
  ingredient_id           Int                     @id @default(autoincrement())
  name                    String
  quantity                String?
  recipe_id               Int
  recipe                  recipe_hdr              @relation("RecipeIngredients", fields: [recipe_id], references: [recipe_id])
}

model recipe_step {
  step_number   Int
  description   String
  recipe_id     Int
  recipe        recipe_hdr   @relation("RecipeSteps", fields: [recipe_id], references: [recipe_id])

  @@id([recipe_id, step_number]) // Composite primary key
}
